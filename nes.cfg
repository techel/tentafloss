MEMORY
{
	ZEROP:		start = $0, size = $100, type = rw, define = yes;	
	OAMBUF:		start = $200, size = $100;
	RAM:		start = $300, size = $500, define = yes;
	INESHDR:	start = $0, size = $10, file = %O, fill = yes;
	PRG:		start = $C000, size = $3FFA, file = %O ,fill = yes, define = yes;
	INTVECS:	start = $fffa, size = $6, file = %O, fill = yes;
	CHR: 		start = $0000, size = $2000, file = %O, fill = yes;
}

SEGMENTS
{
	HEADER:		load = INESHDR,	type = ro;
	CODE:		load = PRG,	type = ro,  define = yes;
	RODATA:		load = PRG,	type = ro,  define = yes;
	DATA:		load = PRG, run = RAM, type = rw,  define = yes;
	VECTORS:	load = INTVECS,	type = rw;
	CHR:		load = CHR,	type = rw;
	BSS:		load = RAM,	type = bss, define = yes;
	ZEROPAGE:	load = ZEROP,	type = zp;
	ONCE:		load = PRG, type = ro, optional = yes;
}

SYMBOLS
{
    __STACK_SIZE__: type = weak, value = $0100;
	__STACK_START__: type = weak, value = $700;
}

FEATURES
{
	CONDES: segment = INIT,
		type = constructor,
		label = __CONSTRUCTOR_TABLE__,
		count = __CONSTRUCTOR_COUNT__;
	CONDES: segment = RODATA,
		type = destructor,
		label = __DESTRUCTOR_TABLE__,
		count = __DESTRUCTOR_COUNT__;
	CONDES: type = interruptor,
		segment = RODATA,
		label = __INTERRUPTOR_TABLE__,
		count = __INTERRUPTOR_COUNT__;
}

